def rol(j: int, h: int) -> int:
    return (j << (h & 7)) | (j >> (8 - (h & 7)))

def ror(j: int, h: int) -> int:
    return (j >> (h & 7)) | (j << (8 - (h & 7)))

expected = [
    0x32, 0xc0, 0xbf, 0x6c, 0x61, 0x85, 0x5c, 0xe4,
    0x40, 0xd0, 0x8f, 0xa2, 0xef, 0x7c, 0x4a, 0x2,
    0x4, 0x9f, 0x37, 0x18, 0x68, 0x97, 0x39, 0x33,
    0xbe, 0xf1, 0x20, 0xf1, 0x40, 0x83, 0x6, 0x7e,
    0xf1, 0x46, 0xa6, 0x47, 0xfe, 0xc3, 0xc8, 0x67,
    0x4, 0x4d, 0xba, 0x10, 0x9b, 0x33
]

for i in range(len(expected)):
    z = expected[i]
    z ^= 37
    z = ror(z, i % 8)
    z = rol(z, (i + 3) % 7)
    print(chr(z), end='')